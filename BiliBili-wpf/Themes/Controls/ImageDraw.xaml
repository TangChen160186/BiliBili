<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:BiliBili_wpf.Converters"
                    xmlns:system="clr-namespace:System;assembly=System.Runtime">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <system:String x:Key="Icon-Minimum">&#xe67a;</system:String>
    <system:String x:Key="Icon-Close">&#xeca0;</system:String>
    <system:String x:Key="Icon-Normal">&#xe651;</system:String>
    <system:String x:Key="Icon-Maxmize">&#xe692;</system:String>
    <system:String x:Key="Icon-BiliBili">&#xe629;</system:String>

    <Style TargetType="Button" x:Key="Btn-SystemCommand">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Foreground" Value="{DynamicResource SystemButtonForegroundBrush}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            x:Name="Border">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border"
                                    Value="{DynamicResource SystemButtonHoverBackgroundBrush}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Btn-Close" TargetType="Button" BasedOn="{StaticResource Btn-SystemCommand}">
        <Setter Property="Content" Value="{StaticResource Icon-Close}" />
        <Setter Property="Command" Value="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}" />
    </Style>
    <Style x:Key="Btn-Minimum" TargetType="Button" BasedOn="{StaticResource Btn-SystemCommand}">
        <Setter Property="Content" Value="{StaticResource Icon-Minimum}" />
        <Setter Property="Command" Value="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}" />
    </Style>


    <Style TargetType="ToggleButton" x:Key="ToggleBtn-NormalMax">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="IsChecked" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource SystemButtonForegroundBrush}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Command"
                Value="{Binding 
            Source={x:Static SystemCommands.MaximizeWindowCommand}}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            x:Name="Border">
                        <ContentPresenter x:Name="ContentPresenter"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border"
                                    Value="{DynamicResource SystemButtonHoverBackgroundBrush}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentPresenter" Property="Content"
                                    Value="{StaticResource Icon-Normal}" />
                            <Setter Property="Command"
                                    Value="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ContentPresenter" Property="Content"
                                    Value="{DynamicResource Icon-Maxmize}" />
                            <Setter Property="Command"
                                    Value="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="MainNavigationItemContainerStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource MainNavigationButtonForegroundBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="0,0,0,20" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Background="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ThemePink}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Foreground" Value="{DynamicResource ThemePink}" />
                                <Setter Property="Cursor" Value="Hand" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="SubNavigationItemContainerStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource SubNavigationItemContainerStyleForegroundBrush}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="ExtraBlack" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Width" Value="62" />
        <Setter Property="Height" Value="40" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" x:Name="Grid">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <Border
                            Background="{DynamicResource ThemePink}"
                            Width="20"
                            Height="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Visibility="{TemplateBinding IsSelected,
                            Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ThemePink}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="Grid">
                            <Setter Property="Foreground" Value="{DynamicResource ThemePink}" />
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>